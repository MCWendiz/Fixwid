using System.Runtime.InteropServices;
using System.Windows;
using System.Windows.Interop;
using System.Windows.Threading;
using FixWidget.Models;
using Microsoft.Web.WebView2.Core;

namespace FixWidget;

public partial class WidgetWindow : Window
{
    private readonly WidgetExtra _config;
    private DispatcherTimer? _hideTimer;
    private EventHandler<CoreWebView2NavigationCompletedEventArgs>? _navigationHandler;
    private CoreWebView2Environment? _environment;
    private bool _isInitialized = false;
    private bool _isDisposed = false;

    // Win32 API –¥–ª—è click-through
    private const int GWL_EXSTYLE = -20;
    private const int WS_EX_TRANSPARENT = 0x00000020;
    private const int WS_EX_LAYERED = 0x00080000;

    [DllImport("user32.dll")]
    private static extern int GetWindowLong(IntPtr hwnd, int index);

    [DllImport("user32.dll")]
    private static extern int SetWindowLong(IntPtr hwnd, int index, int newStyle);

    public WidgetWindow(WidgetExtra config)
    {
        InitializeComponent();
        _config = config;
        
        // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        try
        {
            System.Diagnostics.Debug.WriteLine("=== NEW WIDGET WINDOW ===");
            System.Diagnostics.Debug.WriteLine($"URL: {config.Url}");
            System.Diagnostics.Debug.WriteLine($"Position: setupX={config.SetupX}, setupY={config.SetupY}, x={config.X}, y={config.Y}");
            System.Diagnostics.Debug.WriteLine($"Size: width={config.Width}, height={config.Height}");
            System.Diagnostics.Debug.WriteLine($"Transform: scale={config.Scale}, contentZoom={config.ContentZoom}, opacity={config.Opacity}");
            System.Diagnostics.Debug.WriteLine($"Screen: setupResX={config.SetupResolutionX}, setupResY={config.SetupResolutionY}");
            System.Diagnostics.Debug.WriteLine($"Other: volume={config.Volume}, clickThrough={config.ClickThrough}, duration={config.DurationMs}");
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine($"‚ö†Ô∏è Error logging config: {ex.Message}");
        }
    }

    private async void Window_Loaded(object sender, RoutedEventArgs e)
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–∫–Ω–æ –Ω–µ –±—ã–ª–æ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–æ
        if (_isInitialized || _isDisposed)
        {
            System.Diagnostics.Debug.WriteLine("‚ö†Ô∏è Window_Loaded –ø—Ä–æ–ø—É—â–µ–Ω: –æ–∫–Ω–æ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–æ");
            return;
        }
        
        _isInitialized = true;
        
        try
        {
            System.Diagnostics.Debug.WriteLine("WidgetWindow.Window_Loaded –Ω–∞—á–∞—Ç–æ");
            
            // –í–ê–ñ–ù–û: –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ–∫–Ω–∞ –î–û –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebView2
            System.Diagnostics.Debug.WriteLine("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–∫–Ω–∞ (—Ä–∞–∑–º–µ—Ä, –ø–æ–∑–∏—Ü–∏—è, –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å)...");
            ApplyWindowConfiguration();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
            if (string.IsNullOrWhiteSpace(_config.Url))
            {
                System.Diagnostics.Debug.WriteLine("ERROR: URL –ø—É—Å—Ç–æ–π!");
                System.Windows.MessageBox.Show("URL –≤–∏–¥–∂–µ—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω!", "–û—à–∏–±–∫–∞", 
                    System.Windows.MessageBoxButton.OK, System.Windows.MessageBoxImage.Error);
                Close();
                return;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º https:// –µ—Å–ª–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–µ —É–∫–∞–∑–∞–Ω
            var url = _config.Url;
            if (!url.StartsWith("http://", StringComparison.OrdinalIgnoreCase) && 
                !url.StartsWith("https://", StringComparison.OrdinalIgnoreCase))
            {
                url = "https://" + url;
            }
            
            System.Diagnostics.Debug.WriteLine($"–ò—Ç–æ–≥–æ–≤—ã–π URL: {url}");

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebView2 —Å –æ–±—â–∏–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            System.Diagnostics.Debug.WriteLine("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebView2 Environment...");
            _environment = await CreateWebView2EnvironmentAsync();
            
            System.Diagnostics.Debug.WriteLine("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CoreWebView2...");
            try
            {
                await WebView.EnsureCoreWebView2Async(_environment);
            }
            catch (COMException ex) when ((uint)ex.HResult == 0x80004004)
            {
                // E_ABORT - –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                System.Diagnostics.Debug.WriteLine("‚ö†Ô∏è E_ABORT –ø—Ä–∏ EnsureCoreWebView2Async - –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è");
                return;
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebView2: {ex.GetType().Name} - {ex.Message}");
                throw;
            }

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º WebView2
            if (WebView.CoreWebView2 != null)
            {
                System.Diagnostics.Debug.WriteLine($"WebView2 –≥–æ—Ç–æ–≤. –ì—Ä–æ–º–∫–æ—Å—Ç—å: {_config.Volume}");
                
                // –ú–ê–°–®–¢–ê–ë —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –≤ ApplyWindowConfiguration()
                // LayoutTransform –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
                
                // –í–∫–ª—é—á–∞–µ–º –∑–≤—É–∫ –ü–ï–†–ï–î –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
                WebView.CoreWebView2.IsMuted = false;
                
                // –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ö–ï–®–ê
                System.Diagnostics.Debug.WriteLine("üóëÔ∏è –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ WebView2...");
                try
                {
                    // –û—á–∏—â–∞–µ–º –í–°–ï —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
                    await WebView.CoreWebView2.Profile.ClearBrowsingDataAsync(
                        CoreWebView2BrowsingDataKinds.AllDomStorage |
                        CoreWebView2BrowsingDataKinds.AllSite |
                        CoreWebView2BrowsingDataKinds.CacheStorage |
                        CoreWebView2BrowsingDataKinds.Cookies |
                        CoreWebView2BrowsingDataKinds.DiskCache |
                        CoreWebView2BrowsingDataKinds.IndexedDb |
                        CoreWebView2BrowsingDataKinds.LocalStorage |
                        CoreWebView2BrowsingDataKinds.WebSql
                    );
                    System.Diagnostics.Debug.WriteLine("‚úÖ –í—Å–µ —Ç–∏–ø—ã –∫–µ—à–∞ –æ—á–∏—â–µ–Ω—ã");
                }
                catch (Exception ex)
                {
                    System.Diagnostics.Debug.WriteLine($"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫–µ—à: {ex.Message}");
                }
                
                // –û–¢–ö–õ–Æ–ß–ê–ï–ú –ö–ï–® –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö WebView2
                var settings = WebView.CoreWebView2.Settings;
                settings.IsGeneralAutofillEnabled = false;
                settings.IsPasswordAutosaveEnabled = false;
                
                // –£–ë–ò–†–ê–ï–ú –°–ö–†–û–õ–õ–ë–ê–†–´ - –æ—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –ø–æ–ª–Ω–æ—Å—Ç—å—é
                settings.AreDefaultScriptDialogsEnabled = true;
                settings.IsScriptEnabled = true;
                settings.AreDevToolsEnabled = false;
                settings.AreDefaultContextMenusEnabled = false;
                
                // –†–ê–ó–†–ï–®–ê–ï–ú –ê–í–¢–û–ü–õ–ï–ô –ê–£–î–ò–û/–í–ò–î–ï–û –±–µ–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                settings.IsWebMessageEnabled = true;
                
                System.Diagnostics.Debug.WriteLine("‚úÖ WebView2: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (autoplay enabled)");
                
                // –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ü–†–û–ó–†–ê–ß–ù–´–ô –§–û–ù
                WebView.DefaultBackgroundColor = System.Drawing.Color.Transparent;
                System.Diagnostics.Debug.WriteLine("‚úÖ WebView2: –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
                
                // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –æ—à–∏–±–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
                WebView.CoreWebView2.ProcessFailed += (s, e) =>
                {
                    System.Diagnostics.Debug.WriteLine($"‚ö†Ô∏è WebView2 ProcessFailed: {e.ProcessFailedKind} - {e.Reason}");
                };
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º URL –≤–∏–¥–∂–µ—Ç–∞ —Å HTTP-–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –ø—Ä–æ—Ç–∏–≤ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
                var urlWithNoCache = url + (url.Contains("?") ? "&" : "?") + "_t=" + DateTime.Now.Ticks;
                System.Diagnostics.Debug.WriteLine($"–ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ URL (no-cache): {urlWithNoCache}");
                
                try
                {
                    // –°–æ–∑–¥–∞—ë–º –∑–∞–ø—Ä–æ—Å —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –ø—Ä–æ—Ç–∏–≤ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
                    var request = WebView.CoreWebView2.Environment.CreateWebResourceRequest(
                        urlWithNoCache,
                        "GET",
                        null,
                        "Cache-Control: no-cache, no-store, must-revalidate\r\nPragma: no-cache\r\nExpires: 0"
                    );
                    
                    WebView.CoreWebView2.NavigateWithWebResourceRequest(request);
                    System.Diagnostics.Debug.WriteLine("‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ no-cache –∑–∞–ø—É—â–µ–Ω–∞");
                }
                catch (COMException ex) when ((uint)ex.HResult == 0x80004004)
                {
                    // E_ABORT - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ –æ–∫–Ω–æ —É–∂–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è
                    System.Diagnostics.Debug.WriteLine("‚ö†Ô∏è E_ABORT –ø—Ä–∏ Navigate - –Ω–∞–≤–∏–≥–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ (–æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è)");
                    return;
                }
                catch (Exception ex)
                {
                    System.Diagnostics.Debug.WriteLine($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ Navigate: {ex.GetType().Name} - {ex.Message}");
                    throw;
                }
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å —á–µ—Ä–µ–∑ JavaScript –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                if (_config.Volume >= 0 && _config.Volume <= 1)
                {
                    // –°–æ–∑–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–¥–∏–Ω —Ä–∞–∑
                    _navigationHandler = async (s, e) =>
                    {
                        try
                        {
                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–∫–Ω–æ –µ—â—ë –Ω–µ –∑–∞–∫—Ä—ã—Ç–æ
                            if (WebView?.CoreWebView2 == null)
                                return;

                            System.Diagnostics.Debug.WriteLine("üîä NavigationCompleted - –Ω–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≥—Ä–æ–º–∫–æ—Å—Ç–∏");

                            // –£–ë–ò–†–ê–ï–ú –°–ö–†–û–õ–õ–ë–ê–†–´ + –ü–†–ò–ú–ï–ù–Ø–ï–ú OPACITY + –ú–ê–°–®–¢–ê–ë –ö –ö–û–ù–¢–ï–ù–¢–£ —á–µ—Ä–µ–∑ CSS
                            var opacityValue = (_config.Opacity / 100.0).ToString(System.Globalization.CultureInfo.InvariantCulture);
                            var zoomValue = _config.ContentZoom.ToString(System.Globalization.CultureInfo.InvariantCulture);
                            var cssCustomizations = $@"
                                (function() {{
                                    const style = document.createElement('style');
                                    style.textContent = `
                                        html, body {{
                                            overflow: hidden !important;
                                            margin: 0 !important;
                                            padding: 0 !important;
                                            width: 100% !important;
                                            height: 100% !important;
                                        }}
                                        * {{
                                            scrollbar-width: none !important; /* Firefox */
                                            -ms-overflow-style: none !important; /* IE/Edge */
                                        }}
                                        *::-webkit-scrollbar {{
                                            display: none !important; /* Chrome/Safari */
                                            width: 0 !important;
                                            height: 0 !important;
                                        }}
                                        
                                        /* –ü–†–ò–ú–ï–ù–Ø–ï–ú OPACITY –ö –°–ê–ú–û–ú–£ –ö–û–ù–¢–ï–ù–¢–£ */
                                        html {{
                                            opacity: {opacityValue} !important;
                                        }}
                                        
                                        /* –ú–ê–°–®–¢–ê–ë–ò–†–£–ï–ú –í–ï–°–¨ –°–ê–ô–¢ —á–µ—Ä–µ–∑ transform: scale() */
                                        body {{
                                            transform: scale({zoomValue}) !important;
                                            transform-origin: top left !important;
                                            width: calc(100% / {zoomValue}) !important;
                                            height: calc(100% / {zoomValue}) !important;
                                        }}
                                    `;
                                    document.head.appendChild(style);
                                    console.log('‚úÖ CSS –ø—Ä–∏–º–µ–Ω–µ–Ω: opacity={opacityValue}, contentZoom={zoomValue}');
                                }})();
                            ";
                            await WebView.CoreWebView2.ExecuteScriptAsync(cssCustomizations);
                            System.Diagnostics.Debug.WriteLine($"‚úÖ CSS –ø—Ä–∏–º–µ–Ω–µ–Ω: opacity={opacityValue}, contentZoom={zoomValue}");

                            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö audio –∏ video —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                            var script = $@"
                                (function() {{
                                    const volume = {_config.Volume.ToString(System.Globalization.CultureInfo.InvariantCulture)};
                                    console.log('üîä FixWidget: Setting volume to:', volume);
                                    
                                    // –≠–ú–£–õ–ò–†–£–ï–ú –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è autoplay
                                    // –°–æ–∑–¥–∞–µ–º –∏ –¥–∏—Å–ø–∞—Ç—á–∏–º —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞ –∏ –∫–∞—Å–∞–Ω–∏—è
                                    try {{
                                        const events = [
                                            new MouseEvent('click', {{ bubbles: true, cancelable: true, view: window }}),
                                            new MouseEvent('mousedown', {{ bubbles: true, cancelable: true, view: window }}),
                                            new TouchEvent('touchstart', {{ bubbles: true, cancelable: true, view: window }}),
                                        ];
                                        events.forEach(event => document.body?.dispatchEvent(event));
                                        console.log('‚úÖ User interaction emulated');
                                    }} catch(e) {{
                                        console.warn('‚ö†Ô∏è Could not emulate interaction:', e.message);
                                    }}
                                    
                                    // –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
                                    function setVolume(el) {{
                                        console.log('üîç Found element:', el.tagName, 'src:', el.src || el.currentSrc);
                                        console.log('  Current volume:', el.volume, 'muted:', el.muted, 'paused:', el.paused);
                                        
                                        el.volume = volume;
                                        el.muted = false;
                                        
                                        // –ü—Ä–æ–±—É–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
                                        if (el.paused) {{
                                            el.play().then(() => {{
                                                console.log('‚úÖ Autoplay —É—Å–ø–µ—à–µ–Ω –¥–ª—è', el.tagName);
                                            }}).catch(e => {{
                                                console.warn('‚ö†Ô∏è Autoplay –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:', e.message);
                                            }});
                                        }}
                                        
                                        console.log('  New volume:', el.volume, 'muted:', el.muted);
                                    }}
                                    
                                    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫—É DOM
                                    function trySetVolume() {{
                                        const elements = document.querySelectorAll('audio, video');
                                        console.log('üîç –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ audio/video:', elements.length);
                                        elements.forEach(setVolume);
                                    }}
                                    
                                    // –ü—Ä–æ–±—É–µ–º —Å—Ä–∞–∑—É
                                    trySetVolume();
                                    
                                    // –ò–ú–ò–¢–ê–¶–ò–Ø –ö–õ–ò–ö–ê –¥–ª—è –æ–±—Ö–æ–¥–∞ Autoplay Policy
                                    setTimeout(() => {{
                                        console.log('ÔøΩÔ∏è –ò–º–∏—Ç–∞—Ü–∏—è –∫–ª–∏–∫–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ autoplay');
                                        document.body.click();
                                        
                                        // –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ audio/video –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
                                        setTimeout(() => {{
                                            document.querySelectorAll('audio, video').forEach(el => {{
                                                if (el.paused) {{
                                                    el.play().then(() => {{
                                                        console.log('‚úÖ Play –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ —É—Å–ø–µ—à–µ–Ω');
                                                    }}).catch(e => {{
                                                        console.error('‚ùå Play –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞ failed:', e);
                                                    }});
                                                }}
                                            }});
                                        }}, 100);
                                    }}, 500);
                                    
                                    // –î–ª—è –±—É–¥—É—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ MutationObserver
                                    const observer = new MutationObserver(() => {{
                                        trySetVolume();
                                    }});
                                    observer.observe(document.body, {{ childList: true, subtree: true }});
                                    
                                    // –¢–∞–∫–∂–µ —Å–ª–µ–¥–∏–º –∑–∞ –∞—Ç—Ä–∏–±—É—Ç–æ–º src
                                    const attrObserver = new MutationObserver(() => {{
                                        trySetVolume();
                                    }});
                                    document.querySelectorAll('audio, video').forEach(el => {{
                                        attrObserver.observe(el, {{ attributes: true, attributeFilter: ['src'] }});
                                    }});
                                    
                                    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞–∂–¥—ã–µ 500ms –ø–µ—Ä–≤—ã–µ 10 —Å–µ–∫—É–Ω–¥
                                    let attempts = 0;
                                    const interval = setInterval(() => {{
                                        trySetVolume();
                                        attempts++;
                                        if (attempts > 20) {{
                                            clearInterval(interval);
                                            console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏');
                                        }}
                                    }}, 500);
                                    
                                    console.log('üîä FixWidget: Audio volume control initialized');
                                }})();
                            ";
                            
                            await WebView.CoreWebView2.ExecuteScriptAsync(script);
                            System.Diagnostics.Debug.WriteLine($"‚úÖ –ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ JavaScript: {_config.Volume}");
                        }
                        catch (COMException ex) when ((uint)ex.HResult == 0x80004004)
                        {
                            // E_ABORT - –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞, –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
                            System.Diagnostics.Debug.WriteLine("–ù–∞–≤–∏–≥–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ (–æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è)");
                        }
                        catch (Exception ex)
                        {
                            System.Diagnostics.Debug.WriteLine($"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏: {ex.Message}");
                        }
                    };
                    
                    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ
                    WebView.CoreWebView2.NavigationCompleted += _navigationHandler;
                }
            }

            // –ü—Ä–∏–º–µ–Ω—è–µ–º click-through –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebView2 (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            if (_config.ClickThrough)
            {
                ApplyClickThrough();
            }
            
            
            // –ï—Å–ª–∏ –µ—Å—Ç—å –∑–≤—É–∫ - –¥–µ–ª–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–ª–∏–∫ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ Autoplay
            if (_config.Volume > 0)
            {
                System.Diagnostics.Debug.WriteLine("üñ±Ô∏è –î–µ–ª–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–ª–∏–∫ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ autoplay");
                await Task.Delay(1000); // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                
                try
                {
                    // –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–ª–∏–∫ –ø–æ —Ü–µ–Ω—Ç—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    await WebView.CoreWebView2.ExecuteScriptAsync(@"
                        (function() {
                            const event = new MouseEvent('click', {
                                view: window,
                                bubbles: true,
                                cancelable: true
                            });
                            document.body.dispatchEvent(event);
                            console.log('üñ±Ô∏è –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –∏–∑ C#');
                        })();
                    ");
                    System.Diagnostics.Debug.WriteLine("‚úÖ –ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω");
                }
                catch (COMException ex) when ((uint)ex.HResult == 0x80004004)
                {
                    // E_ABORT - –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞, –æ–∫–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è
                    System.Diagnostics.Debug.WriteLine("‚ö†Ô∏è E_ABORT –ø—Ä–∏ ExecuteScriptAsync - –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞");
                    return;
                }
                catch (Exception ex)
                {
                    System.Diagnostics.Debug.WriteLine($"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–ª–∏–∫–∞: {ex.Message}");
                }
            }

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è autoplay
            try
            {
                await WebView.CoreWebView2.ExecuteScriptAsync(@"
                    (function() {
                        console.log('üîÑ –ó–∞–ø—É—Å–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
                        
                        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —ç–º—É–ª–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        setInterval(() => {
                            try {
                                // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏
                                const event = new MouseEvent('mousemove', {
                                    view: window,
                                    bubbles: true,
                                    cancelable: true,
                                    clientX: 1,
                                    clientY: 1
                                });
                                document.dispatchEvent(event);
                                
                                // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ñ–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º
                                if (document.hidden) {
                                    console.log('‚ö†Ô∏è Page is hidden, trying to activate');
                                }
                            } catch(e) {
                                console.warn('‚ö†Ô∏è Activity simulation error:', e);
                            }
                        }, 5000); // –ö–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
                        
                        console.log('‚úÖ –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
                    })();
                ");
                System.Diagnostics.Debug.WriteLine("‚úÖ –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞");
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {ex.Message}");
            }

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä —Å–∫—Ä—ã—Ç–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if (_config.DurationMs > 0)
            {
                System.Diagnostics.Debug.WriteLine($"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ {_config.DurationMs} –º—Å");
                _hideTimer = new DispatcherTimer
                {
                    Interval = TimeSpan.FromMilliseconds(_config.DurationMs)
                };
                _hideTimer.Tick += (s, args) =>
                {
                    System.Diagnostics.Debug.WriteLine("–¢–∞–π–º–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–ª - –∑–∞–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç");
                    _hideTimer?.Stop();
                    Close();
                };
                _hideTimer.Start();
            }
            
            System.Diagnostics.Debug.WriteLine("WidgetWindow.Window_Loaded –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ");
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine($"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ Window_Loaded: {ex}");
            System.Windows.MessageBox.Show($"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–∂–µ—Ç–∞: {ex.Message}", "–û—à–∏–±–∫–∞", 
                System.Windows.MessageBoxButton.OK, System.Windows.MessageBoxImage.Error);
            Close();
        }
    }

    private static async Task<CoreWebView2Environment> CreateWebView2EnvironmentAsync()
    {
        // –°–æ–∑–¥–∞—ë–º –£–ù–ò–ö–ê–õ–¨–ù–£–Æ –ø–∞–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ WebView2
        // –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Å–≤–µ–∂–∏–π –∫–µ—à –∫–∞–∂–¥—ã–π —Ä–∞–∑
        var timestamp = DateTime.Now.Ticks;
        var userDataFolder = System.IO.Path.Combine(
            System.IO.Path.GetTempPath(),
            "FixWidget",
            "WebView2",
            $"Session_{timestamp}"
        );
        
        System.Diagnostics.Debug.WriteLine($"WebView2 UserDataFolder (NEW SESSION): {userDataFolder}");
        
        // –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        System.IO.Directory.CreateDirectory(userDataFolder);
        
        // –°–æ–∑–¥–∞—ë–º –æ–ø—Ü–∏–∏ –¥–ª—è Environment
        var options = new CoreWebView2EnvironmentOptions();
        
        // –í–ê–ñ–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∞–≤—Ç–æ–ø–ª–µ—è
        options.AdditionalBrowserArguments = 
            "--autoplay-policy=no-user-gesture-required " +  // –†–∞–∑—Ä–µ—à–∞–µ–º –∞–≤—Ç–æ–ø–ª–µ–π –ë–ï–ó –∫–ª–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            "--disable-features=AutoplayIgnoreWebAudio " +   // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è Web Audio API
            "--disable-background-timer-throttling " +       // –ù–µ –∑–∞–º–µ–¥–ª—è–µ–º —Ç–∞–π–º–µ—Ä—ã –≤ —Ñ–æ–Ω–µ
            "--disable-backgrounding-occluded-windows " +    // –ù–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º –æ–∫–Ω–∞ –≤ —Ñ–æ–Ω
            "--disable-renderer-backgrounding";              // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤ —Ñ–æ–Ω–µ
        
        System.Diagnostics.Debug.WriteLine($"üîä WebView2 arguments: {options.AdditionalBrowserArguments}");
        
        var environment = await Microsoft.Web.WebView2.Core.CoreWebView2Environment.CreateAsync(
            null, // browserExecutableFolder - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π Edge
            userDataFolder, // userDataFolder
            options // options - –° –†–ê–ó–†–ï–®–ï–ù–ò–ï–ú –ê–í–¢–û–ü–õ–ï–Ø!
        );
        
        return environment;
    }

    private void ApplyWindowConfiguration()
    {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞
        var screenWidth = SystemParameters.PrimaryScreenWidth;
        var screenHeight = SystemParameters.PrimaryScreenHeight;

        // –í—ã—á–∏—Å–ª—è–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä—É—é—â–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        var scaleX = screenWidth / _config.SetupResolutionX;
        var scaleY = screenHeight / _config.SetupResolutionY;

        // –†–ê–ó–ú–ï–† –û–ö–ù–ê: –í—Å–µ–≥–¥–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π 600x600 (–ù–ï –∑–∞–≤–∏—Å–∏—Ç –æ—Ç scale!)
        Width = 1000;
        Height = 1000;

        // –ü–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º setupX/setupY —Å —É—á–µ—Ç–æ–º –º–∞—Å—à—Ç–∞–±–∞ —ç–∫—Ä–∞–Ω–∞
        Left = _config.SetupX * scaleX;
        Top = _config.SetupY * scaleY;

        // –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ–∫–Ω–∞ (–Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ CSS)
        Opacity = 1.0; // –û–∫–Ω–æ –≤—Å–µ–≥–¥–∞ –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ CSS

        System.Diagnostics.Debug.WriteLine($"=== WINDOW CONFIG APPLIED ===");
        System.Diagnostics.Debug.WriteLine($"Position: setupX={_config.SetupX}, setupY={_config.SetupY}");
        System.Diagnostics.Debug.WriteLine($"Window size: 600x600 (fixed)");
        System.Diagnostics.Debug.WriteLine($"ContentZoom={_config.ContentZoom} (–∏–ª–∏ scale={_config.Scale} –µ—Å–ª–∏ contentZoom –Ω–µ –∑–∞–¥–∞–Ω)");
        System.Diagnostics.Debug.WriteLine($"Opacity={_config.Opacity}%");
        System.Diagnostics.Debug.WriteLine($"Screen: {screenWidth}x{screenHeight}, ScaleFactor: {scaleX:F2}x{scaleY:F2}");
        System.Diagnostics.Debug.WriteLine($"Final: Width={Width:F0}, Height={Height:F0}, Left={Left:F0}, Top={Top:F0}");
    }

    private void ApplyClickThrough()
    {
        if (_config.ClickThrough)
        {
            var hwnd = new WindowInteropHelper(this).Handle;
            var extendedStyle = GetWindowLong(hwnd, GWL_EXSTYLE);
            SetWindowLong(hwnd, GWL_EXSTYLE, extendedStyle | WS_EX_TRANSPARENT | WS_EX_LAYERED);
            System.Diagnostics.Debug.WriteLine($"‚úÖ Click-through: ENABLED");
        }
    }

    protected override void OnClosed(EventArgs e)
    {
        if (_isDisposed)
        {
            base.OnClosed(e);
            return;
        }
        
        _isDisposed = true;
        
        try
        {
            _hideTimer?.Stop();
            _hideTimer = null;
            
            // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏—è
            if (_navigationHandler != null && WebView?.CoreWebView2 != null)
            {
                try
                {
                    WebView.CoreWebView2.NavigationCompleted -= _navigationHandler;
                }
                catch (Exception ex)
                {
                    System.Diagnostics.Debug.WriteLine($"‚ö†Ô∏è Error unsubscribing NavigationCompleted: {ex.Message}");
                }
                _navigationHandler = null;
            }
            
            // –û—á–∏—â–∞–µ–º WebView2
            try
            {
                WebView?.Dispose();
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"‚ö†Ô∏è Error disposing WebView: {ex.Message}");
            }
            
            // –û—á–∏—â–∞–µ–º Environment
            _environment = null;
            
            System.Diagnostics.Debug.WriteLine("‚úÖ WidgetWindow closed and disposed");
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine($"‚ùå Error in OnClosed: {ex.Message}");
        }
        finally
        {
            base.OnClosed(e);
        }
    }
}
